---
export const prerender = true
import type { GQLNode } from "../lib/types";

import { getNodeByURI, getAllUris } from "../lib/api";
import BaseLayout from "../layout/BaseLayout.astro";


// const uri = `/${Astro.params.uri}/`;
// const data = await getNodeByURI(uri);
// const node: GQLNode = data.nodeByUri;

// console.log(node.title)

// if(!node.content) node.content = 'No content to display'

/**
 * 
 * For Dev only. Change absolute links to relative links
 * 
 */
// node.content = node.content?.replaceAll('href="https://bikesandbrews.ca/', 'href="/')


export async function getStaticPaths(){
    // return await getAllUris();
    return [
        { params: { uri: 'tag/50km' } },
        { params: { uri: 'tag/0-10km' } },
        { params: { uri: 'tag/10-20km' } },
        { params: { uri: 'home-page' } }
    ]
}


const Post = 'Post'
const Page = 'Page'
const Archive = 'Archive'

/**
 * @description 
 * The following code can be used if different page templates are needed
 * depending on the type of page (page, post, archive, etc.)
 * Can reder a dynamic component with <Template></Template>
 */
// function resolveContentTemplate(node: GQLNode){ 
//     let template

//     switch(node.__typename){
//         case 'Post':
//             template = Post;
//             break; 
//         case 'Page':
//             template = Page;
//             break; 
//         case 'Category':
//             template = Archive;
//             break; 
//         case 'Tag':
//             template = Archive;
//             break; 
//         default: 
//             template = Post;
//     }

//     return template;
// }

// const Template = resolveContentTemplate(node)

---

<!-- <BaseLayout title={`${node.title || 'TC Bikes and Brews'} - Tri-City Bikes and Brews`}> -->
<BaseLayout title={`${'TC Bikes and Brews'} - Tri-City Bikes and Brews`}>

    <!-- <h2 set:html={node.title}></h2> -->
    <h2>Test title</h2>

    <!-- { node.isContentNode && <div set:html={node.content}></div> } -->
    <p>Content here</p>
</BaseLayout>


<style>

h2 {
    margin-bottom: 1rem;
    padding-block : 1rem;
    font-size : 2.5rem;
    font-weight: bold;
    letter-spacing: 0.1rem;
    color: hsl( var(--color-secondary-400) );

}


</style>