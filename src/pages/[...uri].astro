---
export const prerender = true
import type { GQLNode } from "../lib/types";

import { getNodeByURI, getAllUris } from "../lib/api";
import BaseLayout from "../layout/BaseLayout.astro";


const uri = `/${Astro.params.uri}/`;
const data = await getNodeByURI(uri);
const node: GQLNode = data.nodeByUri;

export async function getStaticPaths(){
    return await getAllUris();
}


const Post = 'Post'
const Page = 'Page'
const Archive = 'Archive'

/**
 * @description 
 * The following code can be used if different page templates are needed
 * depending on the type of page (page, post, archive, etc.)
 * Can reder a dynamic component with <Template></Template>
 */
// function resolveContentTemplate(node: GQLNode){ 
//     let template

//     switch(node.__typename){
//         case 'Post':
//             template = Post;
//             break; 
//         case 'Page':
//             template = Page;
//             break; 
//         case 'Category':
//             template = Archive;
//             break; 
//         case 'Tag':
//             template = Archive;
//             break; 
//         default: 
//             template = Post;
//     }

//     return template;
// }

// const Template = resolveContentTemplate(node)

---

<BaseLayout title={'Title'}>
    
    <div set:html={node.content}></div>
    <div>uri</div>

</BaseLayout>